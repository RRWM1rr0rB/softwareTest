otelcol.receiver.otlp "default" {
	// configures the default grpc endpoint "0.0.0.0:4317"
	grpc { }
	// configures the default http/protobuf endpoint "0.0.0.0:4318"
	http { }

	output {
		metrics = [otelcol.processor.batch.default.input]
		logs    = [otelcol.processor.batch.default.input]
		traces  = [otelcol.processor.batch.default.input]
	}
}

otelcol.processor.batch "default" {
	output {
		metrics = [otelcol.exporter.prometheus.grafana_cloud_prometheus.input]
		logs    = [otelcol.exporter.loki.grafana_cloud_loki.input]
		traces  = [otelcol.exporter.otlp.grafana_cloud_tempo.input]
	}
}

otelcol.exporter.loki "grafana_cloud_loki" {
	forward_to = [loki.write.grafana_cloud_loki.receiver]
}

otelcol.exporter.prometheus "grafana_cloud_prometheus" {
	forward_to = [prometheus.remote_write.grafana_cloud_prometheus.receiver]
}

prometheus.remote_write "grafana_cloud_prometheus" {
	endpoint {
		url = "https://prometheus-prod-24-prod-eu-west-2.grafana.net/api/prom/push"

		basic_auth {
			username = "-"
			password = "-"
		}
	}
}

loki.write "grafana_cloud_loki" {
	endpoint {
		url = "https://logs-prod-eu-west-0.grafana.net/loki/api/v1/push"

		basic_auth {
			username = "-"
			password = "-"
		}
	}
}

otelcol.exporter.otlp "grafana_cloud_tempo" {
	client {
		endpoint = "tempo-prod-10-prod-eu-west-2.grafana.net:443"
		auth     = otelcol.auth.basic.grafana_cloud_tempo.handler
	}
}

otelcol.auth.basic "grafana_cloud_tempo" {
	username = "-"
	password = "-"
}

prometheus.scrape "static" {
  scrape_interval = "10s"
  scrape_timeout = "5s"
  forward_to = [
    prometheus.remote_write.grafana_cloud_prometheus.receiver,
  ]
  metrics_path = "/metrics"
  targets = [
    {
      "__address__" = "host.docker.internal:10000",
      "app" = "software-test",
    },
  ]
}